% Recording 100ms of audio and displaying the data

% Set recording parameters
Fs = 44100;  % Sample rate (Hz)
recordDuration = (1/44100)*44100;  % Recording duration in seconds (100ms)
numChannels = 1;  % Number of audio channels

% Create audiorecorder object with specified parameters
recObj = audiorecorder(Fs, 8, numChannels);

fprintf('Audio Recorder Properties:\n');
fprintf('SampleRate: %d\n', recObj.SampleRate);
fprintf('BitsPerSample: %d\n', recObj.BitsPerSample);
fprintf('NumChannels: %d\n', recObj.NumChannels);

% Record audio for (1/44100)*n samples
recordblocking(recObj, recordDuration);


% Retrieve the recorded audio data
%audioData = getaudiodata(recObj);
audioData = [0.0, 0.2, 0.3, 0.4, 0.5];
disp(audioData);
audioDatacon = round(256 * audioData);
disp(audioDatacon);
% Convert audio samples to binary
binaryData = dec2bin(audioDatacon,8);


% Display the binary data
disp(binaryData);

%--------------------------------------------------------------------------
%converting audio back

ResAudio = bin2dec(binaryData);
disp(ResAudio);
resAudioMat = (ResAudio/128);
disp(resAudioMat);

% Plot the recorded data as a vector
figure(1);
subplot(2,1,1);
plot(audioData);
title('Recorded Audio Data');
xlabel('Sample Index');
ylabel('Amplitude');
grid on;


figure(1);
subplot(2,1,2);
plot(audioData);
title('recived Audio Data');
xlabel('Sample Index');
ylabel('Amplitude');
grid on;
disp('Recording and plotting complete.');
