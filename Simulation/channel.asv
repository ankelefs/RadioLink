%*************************************************************************
% Filename: channel.m
%
% Contents: This file contains the simulated channel block.
%*************************************************************************


function channelSignal = channel(txSignal, samplingFrequency, plotOption)

    % Parameters
    snrForSimulation = 10;




    % AWGN added based relative to measurements of signal
    channelSignal_awgn = awgn(txSignal, snrForSimulation, "measured");   
    channelSignal_awgnSum = real(channelSignal_awgn) + imag(channelSignal_awgn);

    % Simulate a phase shift
    phi = 35;                                                   % Phase shift of x degrees
    channelSignal_phaseShift = txSignal*exp(1i*deg2rad(phi));         % Apply phase shift
    channelSignal_phaseShiftSum = real(channelSignal_phaseShift) + imag(channelSignal_phaseShift);

    % Simulate a frequency offset:
    % Difference between the LO at the Tx and the Rx 
    frequencyOffset = 15000;                                            % Frequency offset in Hz
    % frequencyOffset = randi([2000 20000]);                              % Random frequency offset in Hz
    t = (0:length(channelSignal_awgn)-1)'/samplingFrequency;                 % Time vector in seconds
    channelSignal_frequencyOffset = txSignal.*exp(1i*2*pi*frequencyOffset*t);      % Apply frequency offset
    channelSignal_frequencyOffsetSum = real(channelSignal_frequencyOffset) + imag(channelSignal_frequencyOffset);
    
    channelSignal_
    

    
    channelSignal = channelSignal_phaseShiftAndFrequencyOffset;


    if(plotOption)
        
        figure(2);
        channelPlots = tiledlayout(4,1);
        title(channelPlots, "Channel Block");

        % Plot data with AWGN
        awgnPlot = nexttile;
        plot(awgnPlot, real(channelSignal_awgn));
        hold on;
        plot(awgnPlot, imag(channelSignal_awgn));
        hold off;
        title(awgnPlot, "AWGN Applied to TxSignal");

        % Plot sum of real and imaginary components with AWGN
        awgnSumPlot = nexttile;
        plot(awgnSumPlot, channelSignal_awgnSum);
        title(awgnSumPlot, "Sum of real and imaginary components with AWGN");

        % Plot sum of real and imaginary components with phase shift
        phaseShiftSumPlot = nexttile;
        plot(phaseShiftSumPlot, channelSignal_phaseShiftSum);
        title(phaseShiftSumPlot, "Sum of real and imaginary components with Phase Shift of " + {phi} + " Â°");

        % Plot data with AWGN and Frequency Offset
        % awgnAndFrequencyOffsetPlot = nexttile;
        % plot(awgnAndFrequencyOffsetPlot, real(channelSignal_frequencyOffset));
        % hold on;
        % plot(awgnAndFrequencyOffsetPlot, imag(channelSignal_frequencyOffset));
        % hold off;
        % title(awgnAndFrequencyOffsetPlot, "AWGN and Frequency Offset Applied to TxSignal");

        % Plot sum of real and imaginary components with AWGN and Frequency Offset
        awgnAndFrequencyOffsetSumPlot = nexttile;
        plot(awgnAndFrequencyOffsetSumPlot, channelSignal_frequencyOffsetSum);
        title(awgnAndFrequencyOffsetSumPlot, "Sum of real and imaginary components with AWGN and Frequency Offset");


        % Plot constellation
        % scatterplot(txSignal_modulated);

    end

end